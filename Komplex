
public class Komplex {

	private double x; // for Re{z = x + iy}
	private double y; // for Im{z = x + iy}
	
	
	//Default Konstruktor mit z = 0
	public Komplex() {
		this.x = 0;
		this.y = 0;
	}
	
	/**Konstruktor mit Parametern
	 * Param x für die Re{z}
	 * param y für Im{z}
	*/
	public Komplex(double x, double y) {
		this.x = x;
		this.y = y;
	}
	
	
	//***************************
	//Getters und Setters
	
	public double getX() {
		return this.x;
	}
	
	public double getY() {
		return this.y;
	}
	
	public void setX(double x) {
		this.x = x;
	}
	public void setY(double y) {
		this.y = y;
	}
	//***************************
	
	
	public void addiere(Komplex z) {
		this.x = this.x + z.x;
		this.y = this.y + z.y;
	}
	
	public void multipliziere(Komplex z) {
		this.x *= z.x;
		this.y *= z.y;
	}
	
	// Betrag:= wurzel(x^2 + y^2)
	public double  getBetrag() {
		return 
				Math.sqrt(
						Math.pow(this.x,2) +
						Math.pow(this.y, 2)
						);
	}
	
	@Override
	public String toString() {
		return "[" + this.x +
				"," +
				this.y+ 
				"]" ;
	}
	
	//Berechnung der Quadratwurzel
	public Komplex[] getWurzel() {
		// Wenn die Zahl 0 ist, gibt zwei 0 Komlexen Zahlen zurück
		if(this.x == 0 && this.y == 0)
			return new Komplex[] {new Komplex(0,0), new Komplex(0,0)};
		
		//Winkel Berechnung für quadratwurzel (daher durch 2 geteilt)
		double winkel = Math.atan2(y,x) / 2;
		
		// Berechnet die beiden Quadratwurzeln
		Komplex wurzel1 = new Komplex(
				Math.sqrt(this.getBetrag()) * Math.cos(winkel),
				Math.sqrt(this.getBetrag()) * Math.sin(winkel)
				);
		Komplex wurzel2 = new Komplex(
				Math.sqrt(this.getBetrag()) * Math.cos(winkel + Math.PI),
				Math.sqrt(this.getBetrag()) * Math.sin(winkel + Math.PI)
				);
		
		
		return new Komplex[] {wurzel1,wurzel2};
	}
	
	
	/** Gibt die Summe der beiden Komplexen Zahlen züruck
	 *  param: Komplexe Zahl (Objekt)
	 * return: Komplexe Zahl als Objekt
	*/
	public Komplex getSumme(Komplex z) {
		//
		Komplex temp = new Komplex (0,0);
		
		
		temp.setX(z.getX() + this.x );
		temp.setY(z.getY() + this.y );
		
		return temp;
	}
	/** Gibt den Produkt der beiden Komplexen Zahlen züruck
	 *  param: Komplexe Zahl (Objekt)
	 * return: Komplexe Zahl (Objekt)
	*/
	public Komplex getProdukt(Komplex z) {
		
		Komplex temp = new Komplex (0,0);
		
	
		temp.setX(z.getX() * this.x );
		temp.setY(z.getY() * this.y );
		
		return temp;
	}

}
